import time

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options

class Script:
    def __init__(self, driver):
        self.driver = driver

    def funpay_auto_sell(self):
        items = ['Golden', 'Skull', 'Mask', 'for', 'The', 'Trickster',
                 '–ê–º—É–ª–µ—Ç', '–ë–æ–µ–≤–∏—Ç–∞—è', '–°—Ç–∞–π–∫–∞', '–®–µ–ª–∫–æ–≤—ã–π', '–∞–º—É–ª–µ—Ç', '–æ–º–∞–º–æ—Ä–∏']
        items_tuple = ('Golden Skull Mask for The Trickster', '–ê–º—É–ª–µ—Ç –ë–æ–µ–≤–∏—Ç–∞—è –°—Ç–∞–π–∫–∞', '–®–µ–ª–∫–æ–≤—ã–π –∞–º—É–ª–µ—Ç –æ–º–∞–º–æ—Ä–∏')

        def check():
            while True:
                global selling_item
                selling_item = []
                self.driver.get('https://funpay.com/')
                sales_gonk = self.driver.find_element(By.XPATH, '//*[@id="navbar"]/ul[2]/li[2]/a/span')
                time.sleep(2)
                # –ï—Å–ª–∏ –ø–æ—Å—Ç—É–ø–∞–µ—Ç –ø—Ä–æ–¥–∞–∂–∞ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∑–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞
                if int(sales_gonk.text) >= 1:
                    new_sale_description()

        def new_sale_description():
            self.driver.get('https://funpay.com/orders/trade')
            new_sale = self.driver.find_element(By.XPATH, '//*[@id="content"]/div/div/div/div[2]/a[1]')
            sale_description = new_sale.find_element(By.XPATH, '//*[@class="order-desc"]/div[1]')
            time.sleep(2)
            # –ö–æ–ª-–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
            for i in sale_description.text.splitlines():
                amount = int(i.split()[-2])
            # –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
            for i in sale_description.text.split():
                if i in items:
                    selling_item.append(i)
                    item = ' '.join(selling_item)
                    if item in items_tuple:
                        find_sell_number(new_sale, item, amount)

        def find_sell_number(new_sale, item, amount):
            # –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞
            for i in new_sale.find_element(By.XPATH, '//*[@class="tc-order"]').text.split():
                if i.startswith('#'):
                    sale_number = i
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å—Ç–∞—Ä—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ –∑–∞–∫–∞–∑–æ–≤
            with open(f'sales_num.txt', 'r') as txt:
                sales_numbers = txt.read()
                txt.close()
            print(sale_number, ' <-- –ù–æ–º–µ—Ä –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ–¥–∞–∂–∏')
            # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ —Å –Ω–æ–≤—ã–º
            if sale_number in sales_numbers:
                print('\n-- –ü—Ä–æ–¥–∞–∂–∞ —É–∂–µ –±—ã–ª–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∞ --')
            # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä–∞ –≤ —Ñ–∞–π–ª–µ –Ω–µ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è, –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º –ø—Ä–æ–¥–∞–∂—É
            else:
                new_numbers = sale_number + ' ' + sales_numbers
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä –≤ –ë–î
                with open(f'sales_num.txt', 'r+') as txt:
                    txt.write(f'{str(new_numbers)}\n')
                    txt.close()
                    print('–ù–æ–º–µ—Ä –ø—Ä–æ–¥–∞–∂–∏ –±—ã–ª –∑–∞–ø–∏—Å–∞–Ω')
                find_code(new_sale, item, amount)

        def find_code(new_sale,item, amount):
            # –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–¥–∞, —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º —É–¥–∞–ª–µ–Ω–∏–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            with open(f'codes\\{item}.txt', 'r') as txt:
                code_to_send = txt.readlines()[:amount]
                print(code_to_send, ' <-- Sending this code')
                txt.close()
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–¥–æ–≤ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ
            with open(f'codes\\{item}.txt', 'r') as txt:
                code_to_save = txt.readlines()[amount:]
                txt.close()
            # –£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–¥–∞
            with open(f'codes\\{item}.txt', 'w') as txt:
                for i in code_to_save:
                    txt.write(i)
                    # time.sleep(5)
                txt.close()
            send_code(new_sale, code_to_send)

        def code_text(code_to_send):
            youre_code = []
            for i in code_to_send:
                youre_code.append(f'–ö–ª—é—á ‚Äî "{i[:-1]}"\n')
            return youre_code

        def send_code(new_sale, code_to_send):
            # –û—Ç–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞ —Å –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–¥–æ–º –≤ —á–∞—Ç
            time.sleep(2)
            new_sale.click()
            time.sleep(2)
            JS_ADD_TEXT_TO_INPUT = """
                          var elm = arguments[0], txt = arguments[1];
                          elm.value += txt;
                          elm.dispatchEvent(new Event('change'));
                          """
            text = f'''üü™üü™–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –ø–æ–∫—É–ø–∫—Éüü™üü™\n
                        {" ".join(code_text(code_to_send))}\n
                        –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞:
                        1Ô∏è‚É£ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ú–æ–∏ –ø–æ–∫—É–ø–∫–∏", –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∑–∞–∫–∞–∑ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞";
                        2Ô∏è‚É£ –ï—Å–ª–∏ –í–∞–º –Ω–µ —Å–ª–æ–∂–Ω–æ ‚Äî –æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ –º–æ–µ–π —Ä–∞–±–æ—Ç–µ!'''
            chat = self.driver.find_element(By.XPATH, '//*[@id="comments"]/textarea')
            self.driver.execute_script(JS_ADD_TEXT_TO_INPUT, chat, text)
            time.sleep(2)
            send_button = self.driver.find_element(By.XPATH,
                                    '//*[@id="content"]/div/div/div/div[2]/div/div[2]/div[2]/div[3]/form/div[3]/button').click()
            time.sleep(3)

        check()


def main():
    options = Options()
    options.add_argument('user-data-dir=C:\\Users\\coolm\\AppData\\Local\\Google\\Chrome\\User Data\\Default')
    driver = webdriver.Chrome(executable_path=r'chromedriver\\chromedriver.exe', chrome_options=options)

    while True:
        time.sleep(2)
        watcher = Script(driver)
        watcher.funpay_auto_sell()
        time.sleep(2)

if __name__ == "__main__":
    main()